<?xml version="1.0" encoding="UTF-8"?>
<!--
	<H3>RtcpMonitorAgent</H3>
	Creates an initial goal to keep itself registered in DF.
	Monitor plan is triggered by a keepMonitoring goal, dispatched by RtcpSubscribePlan 
	<H4>Explanation</H4>
	It checks the rtcp connection and sends the info to every agent subscribed to this service.
	<H5>Requirements</H5>
	Make sure libpcap or winpcap is installed on your system as well as jpcap library. 
	Also make sure permissions are granted in Linux and Mac OS.
-->

<agent xmlns="http://jadex.sourceforge.net/jadex-bdi"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://jadex.sourceforge.net/jadex-bdi
	                    http://jadex.sourceforge.net/jadex-bdi-2.0.xsd"
	name="RtcpMonitor"
	package="es.upm.dit.gsi.starfire.rtcpMonitorAgent">
	
	<imports>
		<import>jadex.planlib.*</import>
		<import>jadex.base.fipa.*</import>
		<import>java.util.logging.*</import>
		<import>jadex.commons.*</import>
		<import>jadex.commons.service.*</import>
		<import>java.util.List</import>
		<import>java.util.ArrayList</import>
	</imports>
	
	<capabilities>
	    <capability name="dfcap" file="jadex.bdi.planlib.df.DF"/>	
	</capabilities>
	
	
	<beliefs>
		<belief name="jitter_threshold" class="long">
			<fact>200</fact>
		</belief>
		
		<belief name="totalLost_threshold" class="long">
			<fact>0</fact>
		</belief>
		
		<belief name="lost_packets_threshold" class="double">
			<fact>0.1</fact>
		</belief>
	
		<belief name="iciList" class="List">
		</belief>
		
		<belief name ="monitoring" class="boolean">
			<fact>false</fact>
		</belief>
	</beliefs>
	
	<goals>
		<achievegoalref name="df_register">
        	<concrete ref="dfcap.df_register"/>
    	</achievegoalref>
    
<!-- <maintaingoal name="keepMonitoring" exclude="never">
    	<maintaincondition language ="jcl">
    	    $beliefbase.iciList.size() == 0 
    	</maintaincondition>

    	 
    	<targetcondition language ="jcl">
    		$beliefbase.iciList.size() == 0
    	</targetcondition>

	</maintaingoal>	 -->
	
		<performgoal name ="keepMonitoring" />
	</goals>
	
	<plans>
		<plan name="rtcp_subscribe_plan">
			<body class="RtcpSubscribePlan"/>
			<trigger>
				<messageevent ref="rtcp_request"/>
			</trigger>
		</plan>
		
		<plan name="rtcp_monitor_plan">
			<body class="RtcpMonitorPlan" />
			<trigger>
    			<goal ref="keepMonitoring"/>
  			</trigger>  			
		</plan>
		
	</plans>

	
 	<events>
		<messageevent name="rtcp_request" direction="receive" type="fipa">
    		<parameter name="performative" class="String" direction="fixed">
        		<value>SFipa.REQUEST</value>
    		</parameter>
		</messageevent>
		
		<messageevent name="rtcp_ack" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
		
		<messageevent name="rtcp_inform" direction="send" type="fipa">
			<parameter name="performative" class="String" direction="fixed">
				<value>SFipa.INFORM</value>
			</parameter>
		</messageevent>
  	</events>
	
	<properties>
		<!-- Only log outputs >= level are printed. -->
		<property name="logging.level">Level.INFO</property>
		<!-- The debugging flag is set to false. -->
		<property name="debugging">false</property>
		<!-- It allows the agent to publish its service. -->
		<property name="dfservice" class="IFuture">SServiceProvider.getService($scope.getServiceProvider(), IDF.class)</property>
    </properties>
	
	<configurations>
		<configuration name="default">
			<goals>
            	<initialgoal ref="df_register">
               		<parameter ref="description">
                    	<value>
							$propertybase.getProperty("dfservice")
								.createDFComponentDescription(null, $propertybase.getProperty("dfservice")
								.createDFServiceDescription("service_rtcp_monitor", "rtcp_monitor", "UPM"))
               	    	</value>
                	</parameter>
                	<parameter ref="leasetime">
                	    <value>20000</value>
                	</parameter>
            	</initialgoal>
        	</goals>
		</configuration>
	</configurations>

</agent>