package es.upm.dit.gsi.ontology.impl;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import es.upm.dit.gsi.ontology.Context;
import es.upm.dit.gsi.ontology.Domain_MFrag;
import es.upm.dit.gsi.ontology.Domain_Res;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#Domain_Res
 *
 * @version generated on Mon Jun 27 12:29:14 CEST 2011
 */
public class DefaultDomain_Res extends DefaultResident
         implements Domain_Res {

    public DefaultDomain_Res(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultDomain_Res() {
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasContextInstance

    public Set getHasContextInstance() {
        return new HashSet(getPropertyValuesAs(getHasContextInstanceProperty(), Context.class));
    }


    public RDFProperty getHasContextInstanceProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasContextInstance";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasContextInstance() {
        return getPropertyValueCount(getHasContextInstanceProperty()) > 0;
    }


    public Iterator listHasContextInstance() {
        return listPropertyValuesAs(getHasContextInstanceProperty(), Context.class);
    }


    public void addHasContextInstance(Context newHasContextInstance) {
        addPropertyValue(getHasContextInstanceProperty(), newHasContextInstance);
    }


    public void removeHasContextInstance(Context oldHasContextInstance) {
        removePropertyValue(getHasContextInstanceProperty(), oldHasContextInstance);
    }


    public void setHasContextInstance(Set newHasContextInstance) {
        setPropertyValues(getHasContextInstanceProperty(), newHasContextInstance);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#isParentOf

    public Set getIsParentOf() {
        return new HashSet(getPropertyValuesAs(getIsParentOfProperty(), Domain_Res.class));
    }


    public RDFProperty getIsParentOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isParentOf";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsParentOf() {
        return getPropertyValueCount(getIsParentOfProperty()) > 0;
    }


    public Iterator listIsParentOf() {
        return listPropertyValuesAs(getIsParentOfProperty(), Domain_Res.class);
    }


    public void addIsParentOf(Domain_Res newIsParentOf) {
        addPropertyValue(getIsParentOfProperty(), newIsParentOf);
    }


    public void removeIsParentOf(Domain_Res oldIsParentOf) {
        removePropertyValue(getIsParentOfProperty(), oldIsParentOf);
    }


    public void setIsParentOf(Set newIsParentOf) {
        setPropertyValues(getIsParentOfProperty(), newIsParentOf);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#isResidentNodeIn

    public Set getIsResidentNodeIn() {
        return new HashSet(getPropertyValuesAs(getIsResidentNodeInProperty(), Domain_MFrag.class));
    }


    public RDFProperty getIsResidentNodeInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isResidentNodeIn";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsResidentNodeIn() {
        return getPropertyValueCount(getIsResidentNodeInProperty()) > 0;
    }


    public Iterator listIsResidentNodeIn() {
        return listPropertyValuesAs(getIsResidentNodeInProperty(), Domain_MFrag.class);
    }


    public void addIsResidentNodeIn(Domain_MFrag newIsResidentNodeIn) {
        addPropertyValue(getIsResidentNodeInProperty(), newIsResidentNodeIn);
    }


    public void removeIsResidentNodeIn(Domain_MFrag oldIsResidentNodeIn) {
        removePropertyValue(getIsResidentNodeInProperty(), oldIsResidentNodeIn);
    }


    public void setIsResidentNodeIn(Set newIsResidentNodeIn) {
        setPropertyValues(getIsResidentNodeInProperty(), newIsResidentNodeIn);
    }
}
