package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.Device;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Device
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public class DefaultDevice extends AbstractCodeGeneratorIndividual
         implements Device {

    public DefaultDevice(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultDevice() {
    }



    // Property http://www.owl-ontologies.com/BayesianDiagnosis.owl#ObjectProperty_8

    public Set getObjectProperty_8() {
        return new HashSet(getPropertyValues(getObjectProperty_8Property()));
    }


    public RDFProperty getObjectProperty_8Property() {
        final String uri = "http://www.owl-ontologies.com/BayesianDiagnosis.owl#ObjectProperty_8";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasObjectProperty_8() {
        return getPropertyValueCount(getObjectProperty_8Property()) > 0;
    }


    public Iterator listObjectProperty_8() {
        return listPropertyValues(getObjectProperty_8Property());
    }


    public void addObjectProperty_8(Object newObjectProperty_8) {
        addPropertyValue(getObjectProperty_8Property(), newObjectProperty_8);
    }


    public void removeObjectProperty_8(Object oldObjectProperty_8) {
        removePropertyValue(getObjectProperty_8Property(), oldObjectProperty_8);
    }


    public void setObjectProperty_8(Set newObjectProperty_8) {
        setPropertyValues(getObjectProperty_8Property(), newObjectProperty_8);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#belongsToNetwork

    public Set getBelongsToNetwork() {
        return new HashSet(getPropertyValuesAs(getBelongsToNetworkProperty(), Network.class));
    }


    public RDFProperty getBelongsToNetworkProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#belongsToNetwork";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasBelongsToNetwork() {
        return getPropertyValueCount(getBelongsToNetworkProperty()) > 0;
    }


    public Iterator listBelongsToNetwork() {
        return listPropertyValuesAs(getBelongsToNetworkProperty(), Network.class);
    }


    public void addBelongsToNetwork(Network newBelongsToNetwork) {
        addPropertyValue(getBelongsToNetworkProperty(), newBelongsToNetwork);
    }


    public void removeBelongsToNetwork(Network oldBelongsToNetwork) {
        removePropertyValue(getBelongsToNetworkProperty(), oldBelongsToNetwork);
    }


    public void setBelongsToNetwork(Set newBelongsToNetwork) {
        setPropertyValues(getBelongsToNetworkProperty(), newBelongsToNetwork);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasAgentResiding

    public Set getHasAgentResiding() {
        return new HashSet(getPropertyValuesAs(getHasAgentResidingProperty(), Agent.class));
    }


    public RDFProperty getHasAgentResidingProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasAgentResiding";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasAgentResiding() {
        return getPropertyValueCount(getHasAgentResidingProperty()) > 0;
    }


    public Iterator listHasAgentResiding() {
        return listPropertyValuesAs(getHasAgentResidingProperty(), Agent.class);
    }


    public void addHasAgentResiding(Agent newHasAgentResiding) {
        addPropertyValue(getHasAgentResidingProperty(), newHasAgentResiding);
    }


    public void removeHasAgentResiding(Agent oldHasAgentResiding) {
        removePropertyValue(getHasAgentResidingProperty(), oldHasAgentResiding);
    }


    public void setHasAgentResiding(Set newHasAgentResiding) {
        setPropertyValues(getHasAgentResidingProperty(), newHasAgentResiding);
    }



    // Property http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasBuiltInPhrase

    public String getHasBuiltInPhrase() {
        return (String) getPropertyValue(getHasBuiltInPhraseProperty());
    }


    public RDFProperty getHasBuiltInPhraseProperty() {
        final String uri = "http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasBuiltInPhrase";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasBuiltInPhrase() {
        return getPropertyValueCount(getHasBuiltInPhraseProperty()) > 0;
    }


    public void setHasBuiltInPhrase(String newHasBuiltInPhrase) {
        setPropertyValue(getHasBuiltInPhraseProperty(), newHasBuiltInPhrase);
    }



    // Property http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasClassPhrase

    public String getHasClassPhrase() {
        return (String) getPropertyValue(getHasClassPhraseProperty());
    }


    public RDFProperty getHasClassPhraseProperty() {
        final String uri = "http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasClassPhrase";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasClassPhrase() {
        return getPropertyValueCount(getHasClassPhraseProperty()) > 0;
    }


    public void setHasClassPhrase(String newHasClassPhrase) {
        setPropertyValue(getHasClassPhraseProperty(), newHasClassPhrase);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasData

    public Set getHasData() {
        return new HashSet(getPropertyValuesAs(getHasDataProperty(), Variable.class));
    }


    public RDFProperty getHasDataProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasData";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasData() {
        return getPropertyValueCount(getHasDataProperty()) > 0;
    }


    public Iterator listHasData() {
        return listPropertyValuesAs(getHasDataProperty(), Variable.class);
    }


    public void addHasData(Variable newHasData) {
        addPropertyValue(getHasDataProperty(), newHasData);
    }


    public void removeHasData(Variable oldHasData) {
        removePropertyValue(getHasDataProperty(), oldHasData);
    }


    public void setHasData(Set newHasData) {
        setPropertyValues(getHasDataProperty(), newHasData);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasFailure

    public Set getHasFailure() {
        return new HashSet(getPropertyValuesAs(getHasFailureProperty(), Failure.class));
    }


    public RDFProperty getHasFailureProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasFailure";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasFailure() {
        return getPropertyValueCount(getHasFailureProperty()) > 0;
    }


    public Iterator listHasFailure() {
        return listPropertyValuesAs(getHasFailureProperty(), Failure.class);
    }


    public void addHasFailure(Failure newHasFailure) {
        addPropertyValue(getHasFailureProperty(), newHasFailure);
    }


    public void removeHasFailure(Failure oldHasFailure) {
        removePropertyValue(getHasFailureProperty(), oldHasFailure);
    }


    public void setHasFailure(Set newHasFailure) {
        setPropertyValues(getHasFailureProperty(), newHasFailure);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPostcondition

    public Set getHasPostcondition() {
        return new HashSet(getPropertyValues(getHasPostconditionProperty()));
    }


    public RDFProperty getHasPostconditionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasPostcondition";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPostcondition() {
        return getPropertyValueCount(getHasPostconditionProperty()) > 0;
    }


    public Iterator listHasPostcondition() {
        return listPropertyValues(getHasPostconditionProperty());
    }


    public void addHasPostcondition(Object newHasPostcondition) {
        addPropertyValue(getHasPostconditionProperty(), newHasPostcondition);
    }


    public void removeHasPostcondition(Object oldHasPostcondition) {
        removePropertyValue(getHasPostconditionProperty(), oldHasPostcondition);
    }


    public void setHasPostcondition(Set newHasPostcondition) {
        setPropertyValues(getHasPostconditionProperty(), newHasPostcondition);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPrecondition

    public Set getHasPrecondition() {
        return new HashSet(getPropertyValues(getHasPreconditionProperty()));
    }


    public RDFProperty getHasPreconditionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasPrecondition";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPrecondition() {
        return getPropertyValueCount(getHasPreconditionProperty()) > 0;
    }


    public Iterator listHasPrecondition() {
        return listPropertyValues(getHasPreconditionProperty());
    }


    public void addHasPrecondition(Object newHasPrecondition) {
        addPropertyValue(getHasPreconditionProperty(), newHasPrecondition);
    }


    public void removeHasPrecondition(Object oldHasPrecondition) {
        removePropertyValue(getHasPreconditionProperty(), oldHasPrecondition);
    }


    public void setHasPrecondition(Set newHasPrecondition) {
        setPropertyValues(getHasPreconditionProperty(), newHasPrecondition);
    }



    // Property http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasPropertyPhrase

    public String getHasPropertyPhrase() {
        return (String) getPropertyValue(getHasPropertyPhraseProperty());
    }


    public RDFProperty getHasPropertyPhraseProperty() {
        final String uri = "http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasPropertyPhrase";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPropertyPhrase() {
        return getPropertyValueCount(getHasPropertyPhraseProperty()) > 0;
    }


    public void setHasPropertyPhrase(String newHasPropertyPhrase) {
        setPropertyValue(getHasPropertyPhraseProperty(), newHasPropertyPhrase);
    }



    // Property http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasRuleCategory

    public Set getHasRuleCategory() {
        return new HashSet(getPropertyValues(getHasRuleCategoryProperty()));
    }


    public RDFProperty getHasRuleCategoryProperty() {
        final String uri = "http://swrl.stanford.edu/ontologies/3.3/swrla.owl#hasRuleCategory";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasRuleCategory() {
        return getPropertyValueCount(getHasRuleCategoryProperty()) > 0;
    }


    public Iterator listHasRuleCategory() {
        return listPropertyValues(getHasRuleCategoryProperty());
    }


    public void addHasRuleCategory(Object newHasRuleCategory) {
        addPropertyValue(getHasRuleCategoryProperty(), newHasRuleCategory);
    }


    public void removeHasRuleCategory(Object oldHasRuleCategory) {
        removePropertyValue(getHasRuleCategoryProperty(), oldHasRuleCategory);
    }


    public void setHasRuleCategory(Set newHasRuleCategory) {
        setPropertyValues(getHasRuleCategoryProperty(), newHasRuleCategory);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#id

    public String getId() {
        return (String) getPropertyValue(getIdProperty());
    }


    public RDFProperty getIdProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#id";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasId() {
        return getPropertyValueCount(getIdProperty()) > 0;
    }


    public void setId(String newId) {
        setPropertyValue(getIdProperty(), newId);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#isComposedBy

    public Set getIsComposedBy() {
        return new HashSet(getPropertyValuesAs(getIsComposedByProperty(), Subsystem.class));
    }


    public RDFProperty getIsComposedByProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#isComposedBy";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsComposedBy() {
        return getPropertyValueCount(getIsComposedByProperty()) > 0;
    }


    public Iterator listIsComposedBy() {
        return listPropertyValuesAs(getIsComposedByProperty(), Subsystem.class);
    }


    public void addIsComposedBy(Subsystem newIsComposedBy) {
        addPropertyValue(getIsComposedByProperty(), newIsComposedBy);
    }


    public void removeIsComposedBy(Subsystem oldIsComposedBy) {
        removePropertyValue(getIsComposedByProperty(), oldIsComposedBy);
    }


    public void setIsComposedBy(Set newIsComposedBy) {
        setPropertyValues(getIsComposedByProperty(), newIsComposedBy);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#isConnectedBy

    public Set getIsConnectedBy() {
        return new HashSet(getPropertyValuesAs(getIsConnectedByProperty(), Connection.class));
    }


    public RDFProperty getIsConnectedByProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#isConnectedBy";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsConnectedBy() {
        return getPropertyValueCount(getIsConnectedByProperty()) > 0;
    }


    public Iterator listIsConnectedBy() {
        return listPropertyValuesAs(getIsConnectedByProperty(), Connection.class);
    }


    public void addIsConnectedBy(Connection newIsConnectedBy) {
        addPropertyValue(getIsConnectedByProperty(), newIsConnectedBy);
    }


    public void removeIsConnectedBy(Connection oldIsConnectedBy) {
        removePropertyValue(getIsConnectedByProperty(), oldIsConnectedBy);
    }


    public void setIsConnectedBy(Set newIsConnectedBy) {
        setPropertyValues(getIsConnectedByProperty(), newIsConnectedBy);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#performedHealingAction

    public Set getPerformedHealingAction() {
        return new HashSet(getPropertyValues(getPerformedHealingActionProperty()));
    }


    public RDFProperty getPerformedHealingActionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#performedHealingAction";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPerformedHealingAction() {
        return getPropertyValueCount(getPerformedHealingActionProperty()) > 0;
    }


    public Iterator listPerformedHealingAction() {
        return listPropertyValues(getPerformedHealingActionProperty());
    }


    public void addPerformedHealingAction(Object newPerformedHealingAction) {
        addPropertyValue(getPerformedHealingActionProperty(), newPerformedHealingAction);
    }


    public void removePerformedHealingAction(Object oldPerformedHealingAction) {
        removePropertyValue(getPerformedHealingActionProperty(), oldPerformedHealingAction);
    }


    public void setPerformedHealingAction(Set newPerformedHealingAction) {
        setPropertyValues(getPerformedHealingActionProperty(), newPerformedHealingAction);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#performedTestAction

    public Set getPerformedTestAction() {
        return new HashSet(getPropertyValues(getPerformedTestActionProperty()));
    }


    public RDFProperty getPerformedTestActionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#performedTestAction";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPerformedTestAction() {
        return getPropertyValueCount(getPerformedTestActionProperty()) > 0;
    }


    public Iterator listPerformedTestAction() {
        return listPropertyValues(getPerformedTestActionProperty());
    }


    public void addPerformedTestAction(Object newPerformedTestAction) {
        addPropertyValue(getPerformedTestActionProperty(), newPerformedTestAction);
    }


    public void removePerformedTestAction(Object oldPerformedTestAction) {
        removePropertyValue(getPerformedTestActionProperty(), oldPerformedTestAction);
    }


    public void setPerformedTestAction(Set newPerformedTestAction) {
        setPropertyValues(getPerformedTestActionProperty(), newPerformedTestAction);
    }
}
