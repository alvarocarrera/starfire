package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.CondRelationship;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#CondRelationship
 *
 * @version generated on Fri Apr 01 15:09:42 CEST 2011
 */
public class DefaultCondRelationship extends AbstractCodeGeneratorIndividual
         implements CondRelationship {

    public DefaultCondRelationship(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultCondRelationship() {
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasParentName

    public Node getHasParentName() {
        return (Node) getPropertyValueAs(getHasParentNameProperty(), Node.class);
    }


    public RDFProperty getHasParentNameProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasParentName";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasParentName() {
        return getPropertyValueCount(getHasParentNameProperty()) > 0;
    }


    public void setHasParentName(Node newHasParentName) {
        setPropertyValue(getHasParentNameProperty(), newHasParentName);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasParentState

    public Entity getHasParentState() {
        return (Entity) getPropertyValueAs(getHasParentStateProperty(), Entity.class);
    }


    public RDFProperty getHasParentStateProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasParentState";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasParentState() {
        return getPropertyValueCount(getHasParentStateProperty()) > 0;
    }


    public void setHasParentState(Entity newHasParentState) {
        setPropertyValue(getHasParentStateProperty(), newHasParentState);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#isConditionantOf

    public Set getIsConditionantOf() {
        return new HashSet(getPropertyValuesAs(getIsConditionantOfProperty(), ProbAssign.class));
    }


    public RDFProperty getIsConditionantOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isConditionantOf";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsConditionantOf() {
        return getPropertyValueCount(getIsConditionantOfProperty()) > 0;
    }


    public Iterator listIsConditionantOf() {
        return listPropertyValuesAs(getIsConditionantOfProperty(), ProbAssign.class);
    }


    public void addIsConditionantOf(ProbAssign newIsConditionantOf) {
        addPropertyValue(getIsConditionantOfProperty(), newIsConditionantOf);
    }


    public void removeIsConditionantOf(ProbAssign oldIsConditionantOf) {
        removePropertyValue(getIsConditionantOfProperty(), oldIsConditionantOf);
    }


    public void setIsConditionantOf(Set newIsConditionantOf) {
        setPropertyValues(getIsConditionantOfProperty(), newIsConditionantOf);
    }
}
