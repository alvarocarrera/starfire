package es.upm.dit.gsi.ontology.impl;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import es.upm.dit.gsi.ontology.Entity;
import es.upm.dit.gsi.ontology.Finding_MFrag;
import es.upm.dit.gsi.ontology.Finding_input;
import es.upm.dit.gsi.ontology.Finding_res;
import es.upm.dit.gsi.ontology.Resident;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#Finding_res
 *
 * @version generated on Mon Jun 27 12:29:13 CEST 2011
 */
public class DefaultFinding_res extends DefaultResident
         implements Finding_res {

    public DefaultFinding_res(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultFinding_res() {
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasParent

    public Set<Finding_input> getHasParent() {
        return (Set<Finding_input>) getPropertyValueAs(getHasParentProperty(), Finding_input.class);
    }


    public RDFProperty getHasParentProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasParent";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasParent() {
        return getPropertyValueCount(getHasParentProperty()) > 0;
    }


    public void setHasParent(Finding_input newHasParent) {
        setPropertyValue(getHasParentProperty(), newHasParent);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasPossibleValues

    public Set getHasPossibleValues() {
        return new HashSet(getPropertyValues(getHasPossibleValuesProperty()));
    }


    public RDFProperty getHasPossibleValuesProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasPossibleValues";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPossibleValues() {
        return getPropertyValueCount(getHasPossibleValuesProperty()) > 0;
    }


    public Iterator listHasPossibleValues() {
        return listPropertyValues(getHasPossibleValuesProperty());
    }


    public void addHasPossibleValues(Entity newHasPossibleValues) {
        addPropertyValue(getHasPossibleValuesProperty(), newHasPossibleValues);
    }


    public void removeHasPossibleValues(Entity oldHasPossibleValues) {
        removePropertyValue(getHasPossibleValuesProperty(), oldHasPossibleValues);
    }


    public void setHasPossibleValues(Set newHasPossibleValues) {
        setPropertyValues(getHasPossibleValuesProperty(), newHasPossibleValues);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#isParentOf

    public Set<Resident> getIsParentOf() {
        return (Set<Resident>) getPropertyValueAs(getIsParentOfProperty(), Resident.class);
    }


    public RDFProperty getIsParentOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isParentOf";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsParentOf() {
        return getPropertyValueCount(getIsParentOfProperty()) > 0;
    }


    public void setIsParentOf(Resident newIsParentOf) {
        setPropertyValue(getIsParentOfProperty(), newIsParentOf);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#isResidentNodeIn

    public Set getIsResidentNodeIn() {
        return new HashSet(getPropertyValuesAs(getIsResidentNodeInProperty(), Finding_MFrag.class));
    }


    public RDFProperty getIsResidentNodeInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isResidentNodeIn";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsResidentNodeIn() {
        return getPropertyValueCount(getIsResidentNodeInProperty()) > 0;
    }


    public Iterator listIsResidentNodeIn() {
        return listPropertyValuesAs(getIsResidentNodeInProperty(), Finding_MFrag.class);
    }


    public void addIsResidentNodeIn(Finding_MFrag newIsResidentNodeIn) {
        addPropertyValue(getIsResidentNodeInProperty(), newIsResidentNodeIn);
    }


    public void removeIsResidentNodeIn(Finding_MFrag oldIsResidentNodeIn) {
        removePropertyValue(getIsResidentNodeInProperty(), oldIsResidentNodeIn);
    }


    public void setIsResidentNodeIn(Set newIsResidentNodeIn) {
        setPropertyValues(getIsResidentNodeInProperty(), newIsResidentNodeIn);
    }
}
