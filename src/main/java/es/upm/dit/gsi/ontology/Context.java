package es.upm.dit.gsi.ontology;
import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#Context
 *
 * @version generated on Mon Jun 27 12:29:14 CEST 2011
 */
public interface Context extends Node {

    // Property http://www.pr-owl.org/pr-owl.owl#hasInnerTerm

    Set getHasInnerTerm();

    RDFProperty getHasInnerTermProperty();

    boolean hasHasInnerTerm();

    Iterator listHasInnerTerm();

    void addHasInnerTerm(Context newHasInnerTerm);

    void removeHasInnerTerm(Context oldHasInnerTerm);

    void setHasInnerTerm(Set newHasInnerTerm);


    // Property http://www.pr-owl.org/pr-owl.owl#hasPossibleValues

    Set getHasPossibleValues();

    RDFProperty getHasPossibleValuesProperty();

    boolean hasHasPossibleValues();

    Iterator listHasPossibleValues();

    void addHasPossibleValues(Entity newHasPossibleValues);

    void removeHasPossibleValues(Entity oldHasPossibleValues);

    void setHasPossibleValues(Set newHasPossibleValues);


    // Property http://www.pr-owl.org/pr-owl.owl#isContextInstanceOf

    Object getIsContextInstanceOf();

    RDFProperty getIsContextInstanceOfProperty();

    boolean hasIsContextInstanceOf();

    void setIsContextInstanceOf(Object newIsContextInstanceOf);


    // Property http://www.pr-owl.org/pr-owl.owl#isContextNodeIn

    Set getIsContextNodeIn();

    RDFProperty getIsContextNodeInProperty();

    boolean hasIsContextNodeIn();

    Iterator listIsContextNodeIn();

    void addIsContextNodeIn(Domain_MFrag newIsContextNodeIn);

    void removeIsContextNodeIn(Domain_MFrag oldIsContextNodeIn);

    void setIsContextNodeIn(Set newIsContextNodeIn);
}
