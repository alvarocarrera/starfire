package es.upm.dit.gsi.ontology;

import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#MFrag
 *
 * @version generated on Fri Apr 01 15:09:42 CEST 2011
 */
public interface MFrag extends OWLIndividual {

    // Property http://www.pr-owl.org/pr-owl.owl#hasExemplar

    Set getHasExemplar();

    RDFProperty getHasExemplarProperty();

    boolean hasHasExemplar();

    Iterator listHasExemplar();

    void addHasExemplar(Exemplar newHasExemplar);

    void removeHasExemplar(Exemplar oldHasExemplar);

    void setHasExemplar(Set newHasExemplar);


    // Property http://www.pr-owl.org/pr-owl.owl#hasInputNode

    Set getHasInputNode();

    RDFProperty getHasInputNodeProperty();

    boolean hasHasInputNode();

    Iterator listHasInputNode();

    void addHasInputNode(Input newHasInputNode);

    void removeHasInputNode(Input oldHasInputNode);

    void setHasInputNode(Set newHasInputNode);


    // Property http://www.pr-owl.org/pr-owl.owl#hasNode

    Set getHasNode();

    RDFProperty getHasNodeProperty();

    boolean hasHasNode();

    Iterator listHasNode();

    void addHasNode(Node newHasNode);

    void removeHasNode(Node oldHasNode);

    void setHasNode(Set newHasNode);


    // Property http://www.pr-owl.org/pr-owl.owl#hasOVariable

    Set getHasOVariable();

    RDFProperty getHasOVariableProperty();

    boolean hasHasOVariable();

    Iterator listHasOVariable();

    void addHasOVariable(OVariable newHasOVariable);

    void removeHasOVariable(OVariable oldHasOVariable);

    void setHasOVariable(Set newHasOVariable);


    // Property http://www.pr-owl.org/pr-owl.owl#hasResidentNode

    Set getHasResidentNode();

    RDFProperty getHasResidentNodeProperty();

    boolean hasHasResidentNode();

    Iterator listHasResidentNode();

    void addHasResidentNode(Resident newHasResidentNode);

    void removeHasResidentNode(Resident oldHasResidentNode);

    void setHasResidentNode(Set newHasResidentNode);


    // Property http://www.pr-owl.org/pr-owl.owl#isMFragOf

    Set getIsMFragOf();

    RDFProperty getIsMFragOfProperty();

    boolean hasIsMFragOf();

    Iterator listIsMFragOf();

    void addIsMFragOf(MTheory newIsMFragOf);

    void removeIsMFragOf(MTheory oldIsMFragOf);

    void setIsMFragOf(Set newIsMFragOf);
}
