package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.TestAction;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#TestAction
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public class DefaultTestAction extends DefaultEnvironmentAction
         implements TestAction {

    public DefaultTestAction(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultTestAction() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#expectedBenefit

    public float getExpectedBenefit() {
        return getPropertyValueLiteral(getExpectedBenefitProperty()).getFloat();
    }


    public RDFProperty getExpectedBenefitProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#expectedBenefit";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasExpectedBenefit() {
        return getPropertyValueCount(getExpectedBenefitProperty()) > 0;
    }


    public void setExpectedBenefit(float newExpectedBenefit) {
        setPropertyValue(getExpectedBenefitProperty(), new java.lang.Float(newExpectedBenefit));
    }



    // Property http://www.owl-ontologies.com/BayesianDiagnosis.owl#hasBayesianObservation

    public Set getHasBayesianObservation() {
        return new HashSet(getPropertyValuesAs(getHasBayesianObservationProperty(), ObservationNode.class));
    }


    public RDFProperty getHasBayesianObservationProperty() {
        final String uri = "http://www.owl-ontologies.com/BayesianDiagnosis.owl#hasBayesianObservation";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasBayesianObservation() {
        return getPropertyValueCount(getHasBayesianObservationProperty()) > 0;
    }


    public Iterator listHasBayesianObservation() {
        return listPropertyValuesAs(getHasBayesianObservationProperty(), ObservationNode.class);
    }


    public void addHasBayesianObservation(ObservationNode newHasBayesianObservation) {
        addPropertyValue(getHasBayesianObservationProperty(), newHasBayesianObservation);
    }


    public void removeHasBayesianObservation(ObservationNode oldHasBayesianObservation) {
        removePropertyValue(getHasBayesianObservationProperty(), oldHasBayesianObservation);
    }


    public void setHasBayesianObservation(Set newHasBayesianObservation) {
        setPropertyValues(getHasBayesianObservationProperty(), newHasBayesianObservation);
    }
}
