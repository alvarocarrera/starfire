package es.upm.dit.gsi.ontology;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import edu.stanford.smi.protegex.owl.javacode.ProtegeJavaMapping;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import edu.stanford.smi.protegex.owl.model.RDFResource;
import edu.stanford.smi.protegex.owl.model.RDFSNamedClass;
import edu.stanford.smi.protegex.owl.model.impl.OWLUtil;
import es.upm.dit.gsi.ontology.impl.DefaultArgRelationship;
import es.upm.dit.gsi.ontology.impl.DefaultBooleanRVState;
import es.upm.dit.gsi.ontology.impl.DefaultBuiltInRV;
import es.upm.dit.gsi.ontology.impl.DefaultCategoricalRVState;
import es.upm.dit.gsi.ontology.impl.DefaultCondRelationship;
import es.upm.dit.gsi.ontology.impl.DefaultContext;
import es.upm.dit.gsi.ontology.impl.DefaultDeclarativeDist;
import es.upm.dit.gsi.ontology.impl.DefaultDomain_MFrag;
import es.upm.dit.gsi.ontology.impl.DefaultDomain_Res;
import es.upm.dit.gsi.ontology.impl.DefaultEntity;
import es.upm.dit.gsi.ontology.impl.DefaultExemplar;
import es.upm.dit.gsi.ontology.impl.DefaultFinding_MFrag;
import es.upm.dit.gsi.ontology.impl.DefaultFinding_input;
import es.upm.dit.gsi.ontology.impl.DefaultFinding_res;
import es.upm.dit.gsi.ontology.impl.DefaultGenerative_input;
import es.upm.dit.gsi.ontology.impl.DefaultInput;
import es.upm.dit.gsi.ontology.impl.DefaultMFrag;
import es.upm.dit.gsi.ontology.impl.DefaultMTheory;
import es.upm.dit.gsi.ontology.impl.DefaultMetaEntity;
import es.upm.dit.gsi.ontology.impl.DefaultNode;
import es.upm.dit.gsi.ontology.impl.DefaultOVariable;
import es.upm.dit.gsi.ontology.impl.DefaultObjectEntity;
import es.upm.dit.gsi.ontology.impl.DefaultPR_OWLTable;
import es.upm.dit.gsi.ontology.impl.DefaultProbAssign;
import es.upm.dit.gsi.ontology.impl.DefaultProbDist;
import es.upm.dit.gsi.ontology.impl.DefaultResident;
import es.upm.dit.gsi.ontology.impl.DefaultSimpleArgRelationship;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 *
 * @version generated on Mon Jun 27 12:29:14 CEST 2011
 */
public class MyFactory {

    private OWLModel owlModel;

    static {
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Finding_input", Finding_input.class, DefaultFinding_input.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Generative_input", Generative_input.class, DefaultGenerative_input.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Finding_res", Finding_res.class, DefaultFinding_res.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Finding_MFrag", Finding_MFrag.class, DefaultFinding_MFrag.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Input", Input.class, DefaultInput.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Node", Node.class, DefaultNode.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Entity", Entity.class, DefaultEntity.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#MFrag", MFrag.class, DefaultMFrag.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#ArgRelationship", ArgRelationship.class, DefaultArgRelationship.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#PR-OWLTable", PR_OWLTable.class, DefaultPR_OWLTable.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#ProbDist", ProbDist.class, DefaultProbDist.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#ProbAssign", ProbAssign.class, DefaultProbAssign.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Resident", Resident.class, DefaultResident.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#DeclarativeDist", DeclarativeDist.class, DefaultDeclarativeDist.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Domain_Res", Domain_Res.class, DefaultDomain_Res.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#BuiltInRV", BuiltInRV.class, DefaultBuiltInRV.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Domain_MFrag", Domain_MFrag.class, DefaultDomain_MFrag.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#CondRelationship", CondRelationship.class, DefaultCondRelationship.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#BooleanRVState", BooleanRVState.class, DefaultBooleanRVState.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Context", Context.class, DefaultContext.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#SimpleArgRelationship", SimpleArgRelationship.class, DefaultSimpleArgRelationship.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#OVariable", OVariable.class, DefaultOVariable.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#Exemplar", Exemplar.class, DefaultExemplar.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#MTheory", MTheory.class, DefaultMTheory.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#CategoricalRVState", CategoricalRVState.class, DefaultCategoricalRVState.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#MetaEntity", MetaEntity.class, DefaultMetaEntity.class);
        ProtegeJavaMapping.add("http://www.pr-owl.org/pr-owl.owl#ObjectEntity", ObjectEntity.class, DefaultObjectEntity.class);
    }

    public MyFactory(OWLModel owlModel) {
        this.owlModel = owlModel;
    }

    public <X> X create(Class<? extends X> javaInterface, String name) {
        return ProtegeJavaMapping.create(owlModel, javaInterface, name);
    }


    public RDFSNamedClass getFinding_inputClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Finding_input";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Finding_input createFinding_input(String name) {
        final RDFSNamedClass cls = getFinding_inputClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultFinding_input(owlModel, cls.createInstance(name).getFrameID());
    }

    public Finding_input getFinding_input(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Finding_input) {
            return (Finding_input) res;
        } else if (res.hasProtegeType(getFinding_inputClass())) {
            return new DefaultFinding_input(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Finding_input> getAllFinding_inputInstances() {
        return getAllFinding_inputInstances(false);
    }

    public Set<Finding_input> getAllFinding_inputInstances(boolean transitive) {
        Set<Finding_input> result = new HashSet<Finding_input>();
        final RDFSNamedClass cls = getFinding_inputClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultFinding_input(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getGenerative_inputClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Generative_input";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Generative_input createGenerative_input(String name) {
        final RDFSNamedClass cls = getGenerative_inputClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultGenerative_input(owlModel, cls.createInstance(name).getFrameID());
    }

    public Generative_input getGenerative_input(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Generative_input) {
            return (Generative_input) res;
        } else if (res.hasProtegeType(getGenerative_inputClass())) {
            return new DefaultGenerative_input(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Generative_input> getAllGenerative_inputInstances() {
        return getAllGenerative_inputInstances(false);
    }

    public Set<Generative_input> getAllGenerative_inputInstances(boolean transitive) {
        Set<Generative_input> result = new HashSet<Generative_input>();
        final RDFSNamedClass cls = getGenerative_inputClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultGenerative_input(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getFinding_resClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Finding_res";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Finding_res createFinding_res(String name) {
        final RDFSNamedClass cls = getFinding_resClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultFinding_res(owlModel, cls.createInstance(name).getFrameID());
    }

    public Finding_res getFinding_res(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Finding_res) {
            return (Finding_res) res;
        } else if (res.hasProtegeType(getFinding_resClass())) {
            return new DefaultFinding_res(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Finding_res> getAllFinding_resInstances() {
        return getAllFinding_resInstances(false);
    }

    public Set<Finding_res> getAllFinding_resInstances(boolean transitive) {
        Set<Finding_res> result = new HashSet<Finding_res>();
        final RDFSNamedClass cls = getFinding_resClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultFinding_res(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getFinding_MFragClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Finding_MFrag";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Finding_MFrag createFinding_MFrag(String name) {
        final RDFSNamedClass cls = getFinding_MFragClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultFinding_MFrag(owlModel, cls.createInstance(name).getFrameID());
    }

    public Finding_MFrag getFinding_MFrag(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Finding_MFrag) {
            return (Finding_MFrag) res;
        } else if (res.hasProtegeType(getFinding_MFragClass())) {
            return new DefaultFinding_MFrag(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Finding_MFrag> getAllFinding_MFragInstances() {
        return getAllFinding_MFragInstances(false);
    }

    public Set<Finding_MFrag> getAllFinding_MFragInstances(boolean transitive) {
        Set<Finding_MFrag> result = new HashSet<Finding_MFrag>();
        final RDFSNamedClass cls = getFinding_MFragClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultFinding_MFrag(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getInputClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Input";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Input createInput(String name) {
        final RDFSNamedClass cls = getInputClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultInput(owlModel, cls.createInstance(name).getFrameID());
    }

    public Input getInput(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Input) {
            return (Input) res;
        } else if (res.hasProtegeType(getInputClass())) {
            return new DefaultInput(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Input> getAllInputInstances() {
        return getAllInputInstances(false);
    }

    public Set<Input> getAllInputInstances(boolean transitive) {
        Set<Input> result = new HashSet<Input>();
        final RDFSNamedClass cls = getInputClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultInput(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getNodeClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Node";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Node createNode(String name) {
        final RDFSNamedClass cls = getNodeClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultNode(owlModel, cls.createInstance(name).getFrameID());
    }

    public Node getNode(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Node) {
            return (Node) res;
        } else if (res.hasProtegeType(getNodeClass())) {
            return new DefaultNode(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Node> getAllNodeInstances() {
        return getAllNodeInstances(false);
    }

    public Set<Node> getAllNodeInstances(boolean transitive) {
        Set<Node> result = new HashSet<Node>();
        final RDFSNamedClass cls = getNodeClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultNode(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getEntityClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Entity";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Entity createEntity(String name) {
        final RDFSNamedClass cls = getEntityClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultEntity(owlModel, cls.createInstance(name).getFrameID());
    }

    public Entity getEntity(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Entity) {
            return (Entity) res;
        } else if (res.hasProtegeType(getEntityClass())) {
            return new DefaultEntity(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Entity> getAllEntityInstances() {
        return getAllEntityInstances(false);
    }

    public Set<Entity> getAllEntityInstances(boolean transitive) {
        Set<Entity> result = new HashSet<Entity>();
        final RDFSNamedClass cls = getEntityClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultEntity(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getMFragClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#MFrag";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public MFrag createMFrag(String name) {
        final RDFSNamedClass cls = getMFragClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultMFrag(owlModel, cls.createInstance(name).getFrameID());
    }

    public MFrag getMFrag(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof MFrag) {
            return (MFrag) res;
        } else if (res.hasProtegeType(getMFragClass())) {
            return new DefaultMFrag(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<MFrag> getAllMFragInstances() {
        return getAllMFragInstances(false);
    }

    public Set<MFrag> getAllMFragInstances(boolean transitive) {
        Set<MFrag> result = new HashSet<MFrag>();
        final RDFSNamedClass cls = getMFragClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultMFrag(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getArgRelationshipClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#ArgRelationship";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public ArgRelationship createArgRelationship(String name) {
        final RDFSNamedClass cls = getArgRelationshipClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultArgRelationship(owlModel, cls.createInstance(name).getFrameID());
    }

    public ArgRelationship getArgRelationship(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof ArgRelationship) {
            return (ArgRelationship) res;
        } else if (res.hasProtegeType(getArgRelationshipClass())) {
            return new DefaultArgRelationship(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<ArgRelationship> getAllArgRelationshipInstances() {
        return getAllArgRelationshipInstances(false);
    }

    public Set<ArgRelationship> getAllArgRelationshipInstances(boolean transitive) {
        Set<ArgRelationship> result = new HashSet<ArgRelationship>();
        final RDFSNamedClass cls = getArgRelationshipClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultArgRelationship(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getPR_OWLTableClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#PR-OWLTable";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public PR_OWLTable createPR_OWLTable(String name) {
        final RDFSNamedClass cls = getPR_OWLTableClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultPR_OWLTable(owlModel, cls.createInstance(name).getFrameID());
    }

    public PR_OWLTable getPR_OWLTable(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof PR_OWLTable) {
            return (PR_OWLTable) res;
        } else if (res.hasProtegeType(getPR_OWLTableClass())) {
            return new DefaultPR_OWLTable(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<PR_OWLTable> getAllPR_OWLTableInstances() {
        return getAllPR_OWLTableInstances(false);
    }

    public Set<PR_OWLTable> getAllPR_OWLTableInstances(boolean transitive) {
        Set<PR_OWLTable> result = new HashSet<PR_OWLTable>();
        final RDFSNamedClass cls = getPR_OWLTableClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultPR_OWLTable(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getProbDistClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#ProbDist";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public ProbDist createProbDist(String name) {
        final RDFSNamedClass cls = getProbDistClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultProbDist(owlModel, cls.createInstance(name).getFrameID());
    }

    public ProbDist getProbDist(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof ProbDist) {
            return (ProbDist) res;
        } else if (res.hasProtegeType(getProbDistClass())) {
            return new DefaultProbDist(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<ProbDist> getAllProbDistInstances() {
        return getAllProbDistInstances(false);
    }

    public Set<ProbDist> getAllProbDistInstances(boolean transitive) {
        Set<ProbDist> result = new HashSet<ProbDist>();
        final RDFSNamedClass cls = getProbDistClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultProbDist(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getProbAssignClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#ProbAssign";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public ProbAssign createProbAssign(String name) {
        final RDFSNamedClass cls = getProbAssignClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultProbAssign(owlModel, cls.createInstance(name).getFrameID());
    }

    public ProbAssign getProbAssign(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof ProbAssign) {
            return (ProbAssign) res;
        } else if (res.hasProtegeType(getProbAssignClass())) {
            return new DefaultProbAssign(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<ProbAssign> getAllProbAssignInstances() {
        return getAllProbAssignInstances(false);
    }

    public Set<ProbAssign> getAllProbAssignInstances(boolean transitive) {
        Set<ProbAssign> result = new HashSet<ProbAssign>();
        final RDFSNamedClass cls = getProbAssignClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultProbAssign(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getResidentClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Resident";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Resident createResident(String name) {
        final RDFSNamedClass cls = getResidentClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultResident(owlModel, cls.createInstance(name).getFrameID());
    }

    public Resident getResident(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Resident) {
            return (Resident) res;
        } else if (res.hasProtegeType(getResidentClass())) {
            return new DefaultResident(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Resident> getAllResidentInstances() {
        return getAllResidentInstances(false);
    }

    public Set<Resident> getAllResidentInstances(boolean transitive) {
        Set<Resident> result = new HashSet<Resident>();
        final RDFSNamedClass cls = getResidentClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultResident(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getDeclarativeDistClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#DeclarativeDist";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public DeclarativeDist createDeclarativeDist(String name) {
        final RDFSNamedClass cls = getDeclarativeDistClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultDeclarativeDist(owlModel, cls.createInstance(name).getFrameID());
    }

    public DeclarativeDist getDeclarativeDist(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof DeclarativeDist) {
            return (DeclarativeDist) res;
        } else if (res.hasProtegeType(getDeclarativeDistClass())) {
            return new DefaultDeclarativeDist(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<DeclarativeDist> getAllDeclarativeDistInstances() {
        return getAllDeclarativeDistInstances(false);
    }

    public Set<DeclarativeDist> getAllDeclarativeDistInstances(boolean transitive) {
        Set<DeclarativeDist> result = new HashSet<DeclarativeDist>();
        final RDFSNamedClass cls = getDeclarativeDistClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultDeclarativeDist(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getDomain_ResClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Domain_Res";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Domain_Res createDomain_Res(String name) {
        final RDFSNamedClass cls = getDomain_ResClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultDomain_Res(owlModel, cls.createInstance(name).getFrameID());
    }

    public Domain_Res getDomain_Res(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Domain_Res) {
            return (Domain_Res) res;
        } else if (res.hasProtegeType(getDomain_ResClass())) {
            return new DefaultDomain_Res(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Domain_Res> getAllDomain_ResInstances() {
        return getAllDomain_ResInstances(false);
    }

    public Set<Domain_Res> getAllDomain_ResInstances(boolean transitive) {
        Set<Domain_Res> result = new HashSet<Domain_Res>();
        final RDFSNamedClass cls = getDomain_ResClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultDomain_Res(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getBuiltInRVClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#BuiltInRV";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public BuiltInRV createBuiltInRV(String name) {
        final RDFSNamedClass cls = getBuiltInRVClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultBuiltInRV(owlModel, cls.createInstance(name).getFrameID());
    }

    public BuiltInRV getBuiltInRV(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof BuiltInRV) {
            return (BuiltInRV) res;
        } else if (res.hasProtegeType(getBuiltInRVClass())) {
            return new DefaultBuiltInRV(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<BuiltInRV> getAllBuiltInRVInstances() {
        return getAllBuiltInRVInstances(false);
    }

    public Set<BuiltInRV> getAllBuiltInRVInstances(boolean transitive) {
        Set<BuiltInRV> result = new HashSet<BuiltInRV>();
        final RDFSNamedClass cls = getBuiltInRVClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultBuiltInRV(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getDomain_MFragClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Domain_MFrag";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Domain_MFrag createDomain_MFrag(String name) {
        final RDFSNamedClass cls = getDomain_MFragClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultDomain_MFrag(owlModel, cls.createInstance(name).getFrameID());
    }

    public Domain_MFrag getDomain_MFrag(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Domain_MFrag) {
            return (Domain_MFrag) res;
        } else if (res.hasProtegeType(getDomain_MFragClass())) {
            return new DefaultDomain_MFrag(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Domain_MFrag> getAllDomain_MFragInstances() {
        return getAllDomain_MFragInstances(false);
    }

    public Set<Domain_MFrag> getAllDomain_MFragInstances(boolean transitive) {
        Set<Domain_MFrag> result = new HashSet<Domain_MFrag>();
        final RDFSNamedClass cls = getDomain_MFragClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultDomain_MFrag(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getCondRelationshipClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#CondRelationship";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public CondRelationship createCondRelationship(String name) {
        final RDFSNamedClass cls = getCondRelationshipClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultCondRelationship(owlModel, cls.createInstance(name).getFrameID());
    }

    public CondRelationship getCondRelationship(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof CondRelationship) {
            return (CondRelationship) res;
        } else if (res.hasProtegeType(getCondRelationshipClass())) {
            return new DefaultCondRelationship(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<CondRelationship> getAllCondRelationshipInstances() {
        return getAllCondRelationshipInstances(false);
    }

    public Set<CondRelationship> getAllCondRelationshipInstances(boolean transitive) {
        Set<CondRelationship> result = new HashSet<CondRelationship>();
        final RDFSNamedClass cls = getCondRelationshipClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultCondRelationship(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getBooleanRVStateClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#BooleanRVState";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public BooleanRVState createBooleanRVState(String name) {
        final RDFSNamedClass cls = getBooleanRVStateClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultBooleanRVState(owlModel, cls.createInstance(name).getFrameID());
    }

    public BooleanRVState getBooleanRVState(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof BooleanRVState) {
            return (BooleanRVState) res;
        } else if (res.hasProtegeType(getBooleanRVStateClass())) {
            return new DefaultBooleanRVState(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<BooleanRVState> getAllBooleanRVStateInstances() {
        return getAllBooleanRVStateInstances(false);
    }

    public Set<BooleanRVState> getAllBooleanRVStateInstances(boolean transitive) {
        Set<BooleanRVState> result = new HashSet<BooleanRVState>();
        final RDFSNamedClass cls = getBooleanRVStateClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultBooleanRVState(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getContextClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Context";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Context createContext(String name) {
        final RDFSNamedClass cls = getContextClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultContext(owlModel, cls.createInstance(name).getFrameID());
    }

    public Context getContext(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Context) {
            return (Context) res;
        } else if (res.hasProtegeType(getContextClass())) {
            return new DefaultContext(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Context> getAllContextInstances() {
        return getAllContextInstances(false);
    }

    public Set<Context> getAllContextInstances(boolean transitive) {
        Set<Context> result = new HashSet<Context>();
        final RDFSNamedClass cls = getContextClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultContext(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getSimpleArgRelationshipClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#SimpleArgRelationship";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public SimpleArgRelationship createSimpleArgRelationship(String name) {
        final RDFSNamedClass cls = getSimpleArgRelationshipClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultSimpleArgRelationship(owlModel, cls.createInstance(name).getFrameID());
    }

    public SimpleArgRelationship getSimpleArgRelationship(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof SimpleArgRelationship) {
            return (SimpleArgRelationship) res;
        } else if (res.hasProtegeType(getSimpleArgRelationshipClass())) {
            return new DefaultSimpleArgRelationship(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<SimpleArgRelationship> getAllSimpleArgRelationshipInstances() {
        return getAllSimpleArgRelationshipInstances(false);
    }

    public Set<SimpleArgRelationship> getAllSimpleArgRelationshipInstances(boolean transitive) {
        Set<SimpleArgRelationship> result = new HashSet<SimpleArgRelationship>();
        final RDFSNamedClass cls = getSimpleArgRelationshipClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultSimpleArgRelationship(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getOVariableClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#OVariable";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public OVariable createOVariable(String name) {
        final RDFSNamedClass cls = getOVariableClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultOVariable(owlModel, cls.createInstance(name).getFrameID());
    }

    public OVariable getOVariable(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof OVariable) {
            return (OVariable) res;
        } else if (res.hasProtegeType(getOVariableClass())) {
            return new DefaultOVariable(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<OVariable> getAllOVariableInstances() {
        return getAllOVariableInstances(false);
    }

    public Set<OVariable> getAllOVariableInstances(boolean transitive) {
        Set<OVariable> result = new HashSet<OVariable>();
        final RDFSNamedClass cls = getOVariableClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultOVariable(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getExemplarClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#Exemplar";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public Exemplar createExemplar(String name) {
        final RDFSNamedClass cls = getExemplarClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultExemplar(owlModel, cls.createInstance(name).getFrameID());
    }

    public Exemplar getExemplar(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof Exemplar) {
            return (Exemplar) res;
        } else if (res.hasProtegeType(getExemplarClass())) {
            return new DefaultExemplar(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<Exemplar> getAllExemplarInstances() {
        return getAllExemplarInstances(false);
    }

    public Set<Exemplar> getAllExemplarInstances(boolean transitive) {
        Set<Exemplar> result = new HashSet<Exemplar>();
        final RDFSNamedClass cls = getExemplarClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultExemplar(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getMTheoryClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#MTheory";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public MTheory createMTheory(String name) {
        final RDFSNamedClass cls = getMTheoryClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultMTheory(owlModel, cls.createInstance(name).getFrameID());
    }

    public MTheory getMTheory(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof MTheory) {
            return (MTheory) res;
        } else if (res.hasProtegeType(getMTheoryClass())) {
            return new DefaultMTheory(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<MTheory> getAllMTheoryInstances() {
        return getAllMTheoryInstances(false);
    }

    public Set<MTheory> getAllMTheoryInstances(boolean transitive) {
        Set<MTheory> result = new HashSet<MTheory>();
        final RDFSNamedClass cls = getMTheoryClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultMTheory(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getCategoricalRVStateClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#CategoricalRVState";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public CategoricalRVState createCategoricalRVState(String name) {
        final RDFSNamedClass cls = getCategoricalRVStateClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultCategoricalRVState(owlModel, cls.createInstance(name).getFrameID());
    }

    public CategoricalRVState getCategoricalRVState(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof CategoricalRVState) {
            return (CategoricalRVState) res;
        } else if (res.hasProtegeType(getCategoricalRVStateClass())) {
            return new DefaultCategoricalRVState(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<CategoricalRVState> getAllCategoricalRVStateInstances() {
        return getAllCategoricalRVStateInstances(false);
    }

    public Set<CategoricalRVState> getAllCategoricalRVStateInstances(boolean transitive) {
        Set<CategoricalRVState> result = new HashSet<CategoricalRVState>();
        final RDFSNamedClass cls = getCategoricalRVStateClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultCategoricalRVState(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getMetaEntityClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#MetaEntity";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public MetaEntity createMetaEntity(String name) {
        final RDFSNamedClass cls = getMetaEntityClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultMetaEntity(owlModel, cls.createInstance(name).getFrameID());
    }

    public MetaEntity getMetaEntity(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof MetaEntity) {
            return (MetaEntity) res;
        } else if (res.hasProtegeType(getMetaEntityClass())) {
            return new DefaultMetaEntity(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<MetaEntity> getAllMetaEntityInstances() {
        return getAllMetaEntityInstances(false);
    }

    public Set<MetaEntity> getAllMetaEntityInstances(boolean transitive) {
        Set<MetaEntity> result = new HashSet<MetaEntity>();
        final RDFSNamedClass cls = getMetaEntityClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultMetaEntity(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFSNamedClass getObjectEntityClass() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#ObjectEntity";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFSNamedClass(name);
    }

    public ObjectEntity createObjectEntity(String name) {
        final RDFSNamedClass cls = getObjectEntityClass();
        if (name == null) {
            name = owlModel.getNextAnonymousResourceName();
        }
        return  new DefaultObjectEntity(owlModel, cls.createInstance(name).getFrameID());
    }

    public ObjectEntity getObjectEntity(String name) {
        RDFResource res = owlModel.getRDFResource(OWLUtil.getInternalFullName(owlModel, name));
        if (res == null) {return null;}
        if (res instanceof ObjectEntity) {
            return (ObjectEntity) res;
        } else if (res.hasProtegeType(getObjectEntityClass())) {
            return new DefaultObjectEntity(owlModel, res.getFrameID());
        }
        return null;
    }

    public Set<ObjectEntity> getAllObjectEntityInstances() {
        return getAllObjectEntityInstances(false);
    }

    public Set<ObjectEntity> getAllObjectEntityInstances(boolean transitive) {
        Set<ObjectEntity> result = new HashSet<ObjectEntity>();
        final RDFSNamedClass cls = getObjectEntityClass();
        RDFResource owlIndividual;
        for (Iterator it = cls.getInstances(transitive).iterator();it.hasNext();) {
            owlIndividual = (RDFResource) it.next();
            result.add(new DefaultObjectEntity(owlModel, owlIndividual.getFrameID()));
        }
        return result;
    }


    public RDFProperty getHasStateProbProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasStateProb";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasArgNumberProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasArgNumber";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasUIDProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasUID";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsDefaultProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isDefault";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasVerticalPositionProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasVerticalPosition";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasDeclarationProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasDeclaration";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsParentOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isParentOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsInputNodeInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isInputNodeIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsInputInstanceOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isInputInstanceOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasPossibleValuesProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasPossibleValues";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsNodeFromProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isNodeFrom";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasInnerTermProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasInnerTerm";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasArgumentProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasArgument";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsInnerTermOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isInnerTermOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsProbDistOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isProbDistOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasProbAssignProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasProbAssign";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasParentProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasParent";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsResidentNodeInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isResidentNodeIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasConditionantProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasConditionant";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasStateNameProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasStateName";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasInputInstanceProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasInputInstance";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasProbDistProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasProbDist";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsArgTermInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isArgTermIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsArgumentOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isArgumentOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasArgTermProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasArgTerm";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsMFragOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isMFragOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasNodeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasNode";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasOVariableProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasOVariable";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasResidentNodeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasResidentNode";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasInputNodeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasInputNode";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasExemplarProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasExemplar";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasTypeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasType";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsContextNodeInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isContextNodeIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsContextInstanceOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isContextInstanceOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasMFragProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasMFrag";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasParentNameProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasParentName";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasParentStateProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasParentState";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsConditionantOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isConditionantOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasContextNodeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasContextNode";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsOVariableInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isOVariableIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsSubsByProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isSubsBy";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getRepresentsOVarProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#representsOVar";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsPossibleValueOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isPossibleValueOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getSubsOVarProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#subsOVar";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsTypeOfProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isTypeOf";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsExemplarInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isExemplarIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getHasContextInstanceProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasContextInstance";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsRepBySkolemProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isRepBySkolem";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsProbAssignInProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isProbAssignIn";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }


    public RDFProperty getIsGloballyExclusiveProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isGloballyExclusive";
        final String name = owlModel.getResourceNameForURI(uri);
        return owlModel.getRDFProperty(name);
    }
}
