package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.Action;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Action
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public class DefaultAction extends AbstractCodeGeneratorIndividual
         implements Action {

    public DefaultAction(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultAction() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#available

    public boolean getAvailable() {
        return getPropertyValueLiteral(getAvailableProperty()).getBoolean();
    }


    public RDFProperty getAvailableProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#available";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasAvailable() {
        return getPropertyValueCount(getAvailableProperty()) > 0;
    }


    public void setAvailable(boolean newAvailable) {
        setPropertyValue(getAvailableProperty(), new java.lang.Boolean(newAvailable));
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#canBePerformedBy

    public Set getCanBePerformedBy() {
        return new HashSet(getPropertyValuesAs(getCanBePerformedByProperty(), Actor.class));
    }


    public RDFProperty getCanBePerformedByProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#canBePerformedBy";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasCanBePerformedBy() {
        return getPropertyValueCount(getCanBePerformedByProperty()) > 0;
    }


    public Iterator listCanBePerformedBy() {
        return listPropertyValuesAs(getCanBePerformedByProperty(), Actor.class);
    }


    public void addCanBePerformedBy(Actor newCanBePerformedBy) {
        addPropertyValue(getCanBePerformedByProperty(), newCanBePerformedBy);
    }


    public void removeCanBePerformedBy(Actor oldCanBePerformedBy) {
        removePropertyValue(getCanBePerformedByProperty(), oldCanBePerformedBy);
    }


    public void setCanBePerformedBy(Set newCanBePerformedBy) {
        setPropertyValues(getCanBePerformedByProperty(), newCanBePerformedBy);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasCondition

    public Set getHasCondition() {
        return new HashSet(getPropertyValuesAs(getHasConditionProperty(), Condition.class));
    }


    public RDFProperty getHasConditionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasCondition";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasCondition() {
        return getPropertyValueCount(getHasConditionProperty()) > 0;
    }


    public Iterator listHasCondition() {
        return listPropertyValuesAs(getHasConditionProperty(), Condition.class);
    }


    public void addHasCondition(Condition newHasCondition) {
        addPropertyValue(getHasConditionProperty(), newHasCondition);
    }


    public void removeHasCondition(Condition oldHasCondition) {
        removePropertyValue(getHasConditionProperty(), oldHasCondition);
    }


    public void setHasCondition(Set newHasCondition) {
        setPropertyValues(getHasConditionProperty(), newHasCondition);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPostcondition

    public Set getHasPostcondition() {
        return new HashSet(getPropertyValues(getHasPostconditionProperty()));
    }


    public RDFProperty getHasPostconditionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasPostcondition";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPostcondition() {
        return getPropertyValueCount(getHasPostconditionProperty()) > 0;
    }


    public Iterator listHasPostcondition() {
        return listPropertyValues(getHasPostconditionProperty());
    }


    public void addHasPostcondition(Object newHasPostcondition) {
        addPropertyValue(getHasPostconditionProperty(), newHasPostcondition);
    }


    public void removeHasPostcondition(Object oldHasPostcondition) {
        removePropertyValue(getHasPostconditionProperty(), oldHasPostcondition);
    }


    public void setHasPostcondition(Set newHasPostcondition) {
        setPropertyValues(getHasPostconditionProperty(), newHasPostcondition);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPrecondition

    public Set getHasPrecondition() {
        return new HashSet(getPropertyValues(getHasPreconditionProperty()));
    }


    public RDFProperty getHasPreconditionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasPrecondition";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPrecondition() {
        return getPropertyValueCount(getHasPreconditionProperty()) > 0;
    }


    public Iterator listHasPrecondition() {
        return listPropertyValues(getHasPreconditionProperty());
    }


    public void addHasPrecondition(Object newHasPrecondition) {
        addPropertyValue(getHasPreconditionProperty(), newHasPrecondition);
    }


    public void removeHasPrecondition(Object oldHasPrecondition) {
        removePropertyValue(getHasPreconditionProperty(), oldHasPrecondition);
    }


    public void setHasPrecondition(Set newHasPrecondition) {
        setPropertyValues(getHasPreconditionProperty(), newHasPrecondition);
    }



    

   

    // Property http://www.owl-ontologies.com/Diagnosis.owl#performed

    public boolean getPerformed() {
        return getPropertyValueLiteral(getPerformedProperty()).getBoolean();
    }


    public RDFProperty getPerformedProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#performed";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPerformed() {
        return getPropertyValueCount(getPerformedProperty()) > 0;
    }


    public void setPerformed(boolean newPerformed) {
        setPropertyValue(getPerformedProperty(), new java.lang.Boolean(newPerformed));
    }
}
