package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.PerformedAction;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#PerformedAction
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public class DefaultPerformedAction extends DefaultAction
         implements PerformedAction {

    public DefaultPerformedAction(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultPerformedAction() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasBeenPerformedBy

    public Set getHasBeenPerformedBy() {
        return new HashSet(getPropertyValuesAs(getHasBeenPerformedByProperty(), Actor.class));
    }


    public RDFProperty getHasBeenPerformedByProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasBeenPerformedBy";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasBeenPerformedBy() {
        return getPropertyValueCount(getHasBeenPerformedByProperty()) > 0;
    }


    public Iterator listHasBeenPerformedBy() {
        return listPropertyValuesAs(getHasBeenPerformedByProperty(), Actor.class);
    }


    public void addHasBeenPerformedBy(Actor newHasBeenPerformedBy) {
        addPropertyValue(getHasBeenPerformedByProperty(), newHasBeenPerformedBy);
    }


    public void removeHasBeenPerformedBy(Actor oldHasBeenPerformedBy) {
        removePropertyValue(getHasBeenPerformedByProperty(), oldHasBeenPerformedBy);
    }


    public void setHasBeenPerformedBy(Set newHasBeenPerformedBy) {
        setPropertyValues(getHasBeenPerformedByProperty(), newHasBeenPerformedBy);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#performed

    public boolean getPerformed() {
        return getPropertyValueLiteral(getPerformedProperty()).getBoolean();
    }


    public RDFProperty getPerformedProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#performed";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPerformed() {
        return getPropertyValueCount(getPerformedProperty()) > 0;
    }


    public void setPerformed(boolean newPerformed) {
        setPropertyValue(getPerformedProperty(), new java.lang.Boolean(newPerformed));
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#successfullyPerformed

    public boolean getSuccessfullyPerformed() {
        return getPropertyValueLiteral(getSuccessfullyPerformedProperty()).getBoolean();
    }


    public RDFProperty getSuccessfullyPerformedProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#successfullyPerformed";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasSuccessfullyPerformed() {
        return getPropertyValueCount(getSuccessfullyPerformedProperty()) > 0;
    }


    public void setSuccessfullyPerformed(boolean newSuccessfullyPerformed) {
        setPropertyValue(getSuccessfullyPerformedProperty(), new java.lang.Boolean(newSuccessfullyPerformed));
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#whenHasBeenPerformed

    public RDFSLiteral getWhenHasBeenPerformed() {
        return (RDFSLiteral) getPropertyValue(getWhenHasBeenPerformedProperty());
    }


    public RDFProperty getWhenHasBeenPerformedProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#whenHasBeenPerformed";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasWhenHasBeenPerformed() {
        return getPropertyValueCount(getWhenHasBeenPerformedProperty()) > 0;
    }


    public void setWhenHasBeenPerformed(RDFSLiteral newWhenHasBeenPerformed) {
        setPropertyValue(getWhenHasBeenPerformedProperty(), newWhenHasBeenPerformed);
    }
}
