package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.System;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#System
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public class DefaultSystem extends AbstractCodeGeneratorIndividual
         implements System {

    public DefaultSystem(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultSystem() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasAgentResiding

    public Set getHasAgentResiding() {
        return new HashSet(getPropertyValuesAs(getHasAgentResidingProperty(), Agent.class));
    }


    public RDFProperty getHasAgentResidingProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasAgentResiding";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasAgentResiding() {
        return getPropertyValueCount(getHasAgentResidingProperty()) > 0;
    }


    public Iterator listHasAgentResiding() {
        return listPropertyValuesAs(getHasAgentResidingProperty(), Agent.class);
    }


    public void addHasAgentResiding(Agent newHasAgentResiding) {
        addPropertyValue(getHasAgentResidingProperty(), newHasAgentResiding);
    }


    public void removeHasAgentResiding(Agent oldHasAgentResiding) {
        removePropertyValue(getHasAgentResidingProperty(), oldHasAgentResiding);
    }


    public void setHasAgentResiding(Set newHasAgentResiding) {
        setPropertyValues(getHasAgentResidingProperty(), newHasAgentResiding);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasData

    public Set getHasData() {
        return new HashSet(getPropertyValuesAs(getHasDataProperty(), Variable.class));
    }


    public RDFProperty getHasDataProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasData";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasData() {
        return getPropertyValueCount(getHasDataProperty()) > 0;
    }


    public Iterator listHasData() {
        return listPropertyValuesAs(getHasDataProperty(), Variable.class);
    }


    public void addHasData(Variable newHasData) {
        addPropertyValue(getHasDataProperty(), newHasData);
    }


    public void removeHasData(Variable oldHasData) {
        removePropertyValue(getHasDataProperty(), oldHasData);
    }


    public void setHasData(Set newHasData) {
        setPropertyValues(getHasDataProperty(), newHasData);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasFailure

    public Set getHasFailure() {
        return new HashSet(getPropertyValuesAs(getHasFailureProperty(), Failure.class));
    }


    public RDFProperty getHasFailureProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasFailure";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasFailure() {
        return getPropertyValueCount(getHasFailureProperty()) > 0;
    }


    public Iterator listHasFailure() {
        return listPropertyValuesAs(getHasFailureProperty(), Failure.class);
    }


    public void addHasFailure(Failure newHasFailure) {
        addPropertyValue(getHasFailureProperty(), newHasFailure);
    }


    public void removeHasFailure(Failure oldHasFailure) {
        removePropertyValue(getHasFailureProperty(), oldHasFailure);
    }


    public void setHasFailure(Set newHasFailure) {
        setPropertyValues(getHasFailureProperty(), newHasFailure);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#id

    public String getId() {
        return (String) getPropertyValue(getIdProperty());
    }


    public RDFProperty getIdProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#id";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasId() {
        return getPropertyValueCount(getIdProperty()) > 0;
    }


    public void setId(String newId) {
        setPropertyValue(getIdProperty(), newId);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#isComposedBy

    public Set getIsComposedBy() {
        return new HashSet(getPropertyValuesAs(getIsComposedByProperty(), Subsystem.class));
    }


    public RDFProperty getIsComposedByProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#isComposedBy";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsComposedBy() {
        return getPropertyValueCount(getIsComposedByProperty()) > 0;
    }


    public Iterator listIsComposedBy() {
        return listPropertyValuesAs(getIsComposedByProperty(), Subsystem.class);
    }


    public void addIsComposedBy(Subsystem newIsComposedBy) {
        addPropertyValue(getIsComposedByProperty(), newIsComposedBy);
    }


    public void removeIsComposedBy(Subsystem oldIsComposedBy) {
        removePropertyValue(getIsComposedByProperty(), oldIsComposedBy);
    }


    public void setIsComposedBy(Set newIsComposedBy) {
        setPropertyValues(getIsComposedByProperty(), newIsComposedBy);
    }
}
