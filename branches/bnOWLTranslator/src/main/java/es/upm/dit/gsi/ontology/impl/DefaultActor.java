package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.ontology.Actor;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Actor
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public class DefaultActor extends AbstractCodeGeneratorIndividual
         implements Actor {

    public DefaultActor(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultActor() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#canPerform

    public Set getCanPerform() {
        return new HashSet(getPropertyValuesAs(getCanPerformProperty(), Action.class));
    }


    public RDFProperty getCanPerformProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#canPerform";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasCanPerform() {
        return getPropertyValueCount(getCanPerformProperty()) > 0;
    }


    public Iterator listCanPerform() {
        return listPropertyValuesAs(getCanPerformProperty(), Action.class);
    }


    public void addCanPerform(Action newCanPerform) {
        addPropertyValue(getCanPerformProperty(), newCanPerform);
    }


    public void removeCanPerform(Action oldCanPerform) {
        removePropertyValue(getCanPerformProperty(), oldCanPerform);
    }


    public void setCanPerform(Set newCanPerform) {
        setPropertyValues(getCanPerformProperty(), newCanPerform);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPerformed

    public Set getHasPerformed() {
        return new HashSet(getPropertyValuesAs(getHasPerformedProperty(), PerformedAction.class));
    }


    public RDFProperty getHasPerformedProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasPerformed";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasPerformed() {
        return getPropertyValueCount(getHasPerformedProperty()) > 0;
    }


    public Iterator listHasPerformed() {
        return listPropertyValuesAs(getHasPerformedProperty(), PerformedAction.class);
    }


    public void addHasPerformed(PerformedAction newHasPerformed) {
        addPropertyValue(getHasPerformedProperty(), newHasPerformed);
    }


    public void removeHasPerformed(PerformedAction oldHasPerformed) {
        removePropertyValue(getHasPerformedProperty(), oldHasPerformed);
    }


    public void setHasPerformed(Set newHasPerformed) {
        setPropertyValues(getHasPerformedProperty(), newHasPerformed);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#id

    public String getId() {
        return (String) getPropertyValue(getIdProperty());
    }


    public RDFProperty getIdProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#id";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasId() {
        return getPropertyValueCount(getIdProperty()) > 0;
    }


    public void setId(String newId) {
        setPropertyValue(getIdProperty(), newId);
    }
}
