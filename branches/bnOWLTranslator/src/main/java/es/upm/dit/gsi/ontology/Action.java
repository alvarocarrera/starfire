package es.upm.dit.gsi.ontology;

import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Action
 *
 * @version generated on Fri Apr 01 15:09:41 CEST 2011
 */
public interface Action extends OWLIndividual {

    // Property http://www.owl-ontologies.com/Diagnosis.owl#available

    boolean getAvailable();

    RDFProperty getAvailableProperty();

    boolean hasAvailable();

    void setAvailable(boolean newAvailable);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#canBePerformedBy

    Set getCanBePerformedBy();

    RDFProperty getCanBePerformedByProperty();

    boolean hasCanBePerformedBy();

    Iterator listCanBePerformedBy();

    void addCanBePerformedBy(Actor newCanBePerformedBy);

    void removeCanBePerformedBy(Actor oldCanBePerformedBy);

    void setCanBePerformedBy(Set newCanBePerformedBy);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasCondition

    Set getHasCondition();

    RDFProperty getHasConditionProperty();

    boolean hasHasCondition();

    Iterator listHasCondition();

    void addHasCondition(Condition newHasCondition);

    void removeHasCondition(Condition oldHasCondition);

    void setHasCondition(Set newHasCondition);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPostcondition

    Set getHasPostcondition();

    RDFProperty getHasPostconditionProperty();

    boolean hasHasPostcondition();

    Iterator listHasPostcondition();

    void addHasPostcondition(Object newHasPostcondition);

    void removeHasPostcondition(Object oldHasPostcondition);

    void setHasPostcondition(Set newHasPostcondition);


//    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPrecondition
//
//    Set getHasPrecondition();
//
//    RDFProperty getHasPreconditionProperty();
//
//    boolean hasHasPrecondition();
//
//    Iterator listHasPrecondition();
//
//    void addHasPrecondition(Object newHasPrecondition);
//
//    void removeHasPrecondition(Object oldHasPrecondition);
//
//    void setHasPrecondition(Set newHasPrecondition);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasPrecondition

    Set getHasPrecondition();

    RDFProperty getHasPreconditionProperty();

    boolean hasHasPrecondition();

    Iterator listHasPrecondition();

    void addHasPrecondition(Object newHasPrecondition);

    void removeHasPrecondition(Object oldHasPrecondition);

    void setHasPrecondition(Set newHasPrecondition);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#performed

    boolean getPerformed();

    RDFProperty getPerformedProperty();

    boolean hasPerformed();

    void setPerformed(boolean newPerformed);
}
