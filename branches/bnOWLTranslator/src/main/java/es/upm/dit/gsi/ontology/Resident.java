package es.upm.dit.gsi.ontology;
import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#Resident
 *
 * @version generated on Mon Jun 27 12:29:14 CEST 2011
 */
public interface Resident extends Node {

    // Property http://www.pr-owl.org/pr-owl.owl#hasArgument

    Set getHasArgument();

    RDFProperty getHasArgumentProperty();

    boolean hasHasArgument();

    Iterator listHasArgument();

    void addHasArgument(SimpleArgRelationship newHasArgument);

    void removeHasArgument(SimpleArgRelationship oldHasArgument);

    void setHasArgument(Set newHasArgument);


    // Property http://www.pr-owl.org/pr-owl.owl#hasInnerTerm

    Set getHasInnerTerm();

    RDFProperty getHasInnerTermProperty();

    boolean hasHasInnerTerm();

    Iterator listHasInnerTerm();

    void addHasInnerTerm(Resident newHasInnerTerm);

    void removeHasInnerTerm(Resident oldHasInnerTerm);

    void setHasInnerTerm(Set newHasInnerTerm);


    // Property http://www.pr-owl.org/pr-owl.owl#hasInputInstance

    Set getHasInputInstance();

    RDFProperty getHasInputInstanceProperty();

    boolean hasHasInputInstance();

    Iterator listHasInputInstance();

    void addHasInputInstance(Input newHasInputInstance);

    void removeHasInputInstance(Input oldHasInputInstance);

    void setHasInputInstance(Set newHasInputInstance);


    // Property http://www.pr-owl.org/pr-owl.owl#hasParent

    Set getHasParent();

    RDFProperty getHasParentProperty();

    boolean hasHasParent();

    Iterator listHasParent();

    void addHasParent(Object newHasParent);

    void removeHasParent(Object oldHasParent);

    void setHasParent(Set newHasParent);


    // Property http://www.pr-owl.org/pr-owl.owl#hasPossibleValues

    Set getHasPossibleValues();

    RDFProperty getHasPossibleValuesProperty();

    boolean hasHasPossibleValues();

    Iterator listHasPossibleValues();

    void addHasPossibleValues(Entity newHasPossibleValues);

    void removeHasPossibleValues(Entity oldHasPossibleValues);

    void setHasPossibleValues(Set newHasPossibleValues);


    // Property http://www.pr-owl.org/pr-owl.owl#hasProbDist

    Set getHasProbDist();

    RDFProperty getHasProbDistProperty();

    boolean hasHasProbDist();

    Iterator listHasProbDist();

    void addHasProbDist(ProbDist newHasProbDist);

    void removeHasProbDist(ProbDist oldHasProbDist);

    void setHasProbDist(Set newHasProbDist);


    // Property http://www.pr-owl.org/pr-owl.owl#isArgTermIn

    Set getIsArgTermIn();

    RDFProperty getIsArgTermInProperty();

    boolean hasIsArgTermIn();

    Iterator listIsArgTermIn();

    void addIsArgTermIn(ArgRelationship newIsArgTermIn);

    void removeIsArgTermIn(ArgRelationship oldIsArgTermIn);

    void setIsArgTermIn(Set newIsArgTermIn);


    // Property http://www.pr-owl.org/pr-owl.owl#isParentOf

    Set getIsParentOf();

    RDFProperty getIsParentOfProperty();

    boolean hasIsParentOf();

    Iterator listIsParentOf();

    void addIsParentOf(Resident newIsParentOf);

    void removeIsParentOf(Resident oldIsParentOf);

    void setIsParentOf(Set newIsParentOf);


    // Property http://www.pr-owl.org/pr-owl.owl#isResidentNodeIn

    Set getIsResidentNodeIn();

    RDFProperty getIsResidentNodeInProperty();

    boolean hasIsResidentNodeIn();

    Iterator listIsResidentNodeIn();

    void addIsResidentNodeIn(MFrag newIsResidentNodeIn);

    void removeIsResidentNodeIn(MFrag oldIsResidentNodeIn);

    void setIsResidentNodeIn(Set newIsResidentNodeIn);
}
