package es.upm.dit.gsi.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import es.upm.dit.gsi.ontology.CategoricalRVStates;
import es.upm.dit.gsi.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#CategoricalRVStates
 *
 * @version generated on Fri Apr 01 15:09:42 CEST 2011
 */
public class DefaultCategoricalRVStates extends DefaultEntity
         implements CategoricalRVStates {

    public DefaultCategoricalRVStates(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultCategoricalRVStates() {
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasType

    public MetaEntity getHasType() {
        return (MetaEntity) getPropertyValueAs(getHasTypeProperty(), MetaEntity.class);
    }


    public RDFProperty getHasTypeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasType";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasType() {
        return getPropertyValueCount(getHasTypeProperty()) > 0;
    }


    public void setHasType(MetaEntity newHasType) {
        setPropertyValue(getHasTypeProperty(), newHasType);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#isGloballyExclusive

    public boolean getIsGloballyExclusive() {
        return getPropertyValueLiteral(getIsGloballyExclusiveProperty()).getBoolean();
    }


    public RDFProperty getIsGloballyExclusiveProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#isGloballyExclusive";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsGloballyExclusive() {
        return getPropertyValueCount(getIsGloballyExclusiveProperty()) > 0;
    }


    public void setIsGloballyExclusive(boolean newIsGloballyExclusive) {
        setPropertyValue(getIsGloballyExclusiveProperty(), new java.lang.Boolean(newIsGloballyExclusive));
    }
}
