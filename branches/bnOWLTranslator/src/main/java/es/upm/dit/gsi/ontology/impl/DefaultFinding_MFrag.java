package es.upm.dit.gsi.ontology.impl;

import java.util.Set;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.OWLModel;
import edu.stanford.smi.protegex.owl.model.RDFProperty;
import es.upm.dit.gsi.ontology.Finding_MFrag;
import es.upm.dit.gsi.ontology.Finding_input;
import es.upm.dit.gsi.ontology.Finding_res;
/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.pr-owl.org/pr-owl.owl#Finding_MFrag
 *
 * @version generated on Mon Jun 27 12:29:14 CEST 2011
 */
public class DefaultFinding_MFrag extends DefaultMFrag
         implements Finding_MFrag {

    public DefaultFinding_MFrag(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultFinding_MFrag() {
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasInputNode

    public Set<Finding_input> getHasInputNode() {
        return (Set<Finding_input>) getPropertyValueAs(getHasInputNodeProperty(), Finding_input.class);
    }


    public RDFProperty getHasInputNodeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasInputNode";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasInputNode() {
        return getPropertyValueCount(getHasInputNodeProperty()) > 0;
    }


    public void setHasInputNode(Finding_input newHasInputNode) {
        setPropertyValue(getHasInputNodeProperty(), newHasInputNode);
    }



    // Property http://www.pr-owl.org/pr-owl.owl#hasResidentNode

    public Set<Finding_res> getHasResidentNode() {
        return (Set<Finding_res>) getPropertyValueAs(getHasResidentNodeProperty(), Finding_res.class);
    }


    public RDFProperty getHasResidentNodeProperty() {
        final String uri = "http://www.pr-owl.org/pr-owl.owl#hasResidentNode";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasResidentNode() {
        return getPropertyValueCount(getHasResidentNodeProperty()) > 0;
    }


    public void setHasResidentNode(Finding_res newHasResidentNode) {
        setPropertyValue(getHasResidentNodeProperty(), newHasResidentNode);
    }
}
