package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.commune.ontology.Symptom;
import es.upm.dit.gsi.commune.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Symptom
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultSymptom extends AbstractCodeGeneratorIndividual
         implements Symptom {

    public DefaultSymptom(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultSymptom() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasLocation

    public Object getHasLocation() {
        return (Object) getPropertyValue(getHasLocationProperty());
    }


    public RDFProperty getHasLocationProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasLocation";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasLocation() {
        return getPropertyValueCount(getHasLocationProperty()) > 0;
    }


    public void setHasLocation(Object newHasLocation) {
        setPropertyValue(getHasLocationProperty(), newHasLocation);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#observationResult

    public Observation getObservationResult() {
        return (Observation) getPropertyValueAs(getObservationResultProperty(), Observation.class);
    }


    public RDFProperty getObservationResultProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#observationResult";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasObservationResult() {
        return getPropertyValueCount(getObservationResultProperty()) > 0;
    }


    public void setObservationResult(Observation newObservationResult) {
        setPropertyValue(getObservationResultProperty(), newObservationResult);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#startsDiagnosis

    public Collection getStartsDiagnosis() {
        return getPropertyValuesAs(getStartsDiagnosisProperty(), Diagnosis.class);
    }


    public RDFProperty getStartsDiagnosisProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#startsDiagnosis";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasStartsDiagnosis() {
        return getPropertyValueCount(getStartsDiagnosisProperty()) > 0;
    }


    public Iterator listStartsDiagnosis() {
        return listPropertyValuesAs(getStartsDiagnosisProperty(), Diagnosis.class);
    }


    public void addStartsDiagnosis(Diagnosis newStartsDiagnosis) {
        addPropertyValue(getStartsDiagnosisProperty(), newStartsDiagnosis);
    }


    public void removeStartsDiagnosis(Diagnosis oldStartsDiagnosis) {
        removePropertyValue(getStartsDiagnosisProperty(), oldStartsDiagnosis);
    }


    public void setStartsDiagnosis(Collection newStartsDiagnosis) {
        setPropertyValues(getStartsDiagnosisProperty(), newStartsDiagnosis);
    }
}
