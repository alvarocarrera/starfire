package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.commune.ontology.TestAction;
import es.upm.dit.gsi.commune.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#TestAction
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultTestAction extends DefaultEnvironmentAction
         implements TestAction {

    public DefaultTestAction(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultTestAction() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#expectedBenefit

    public float getExpectedBenefit() {
        return getPropertyValueLiteral(getExpectedBenefitProperty()).getFloat();
    }


    public RDFProperty getExpectedBenefitProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#expectedBenefit";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasExpectedBenefit() {
        return getPropertyValueCount(getExpectedBenefitProperty()) > 0;
    }


    public void setExpectedBenefit(float newExpectedBenefit) {
        setPropertyValue(getExpectedBenefitProperty(), new java.lang.Float(newExpectedBenefit));
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#observationResult

    public Observation getObservationResult() {
        return (Observation) getPropertyValueAs(getObservationResultProperty(), Observation.class);
    }


    public RDFProperty getObservationResultProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#observationResult";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasObservationResult() {
        return getPropertyValueCount(getObservationResultProperty()) > 0;
    }


    public void setObservationResult(Observation newObservationResult) {
        setPropertyValue(getObservationResultProperty(), newObservationResult);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#possibleResults

    public Collection getPossibleResults() {
        return getPropertyValues(getPossibleResultsProperty());
    }


    public RDFProperty getPossibleResultsProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#possibleResults";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasPossibleResults() {
        return getPropertyValueCount(getPossibleResultsProperty()) > 0;
    }


    public Iterator listPossibleResults() {
        return listPropertyValues(getPossibleResultsProperty());
    }


    public void addPossibleResults(String newPossibleResults) {
        addPropertyValue(getPossibleResultsProperty(), newPossibleResults);
    }


    public void removePossibleResults(String oldPossibleResults) {
        removePropertyValue(getPossibleResultsProperty(), oldPossibleResults);
    }


    public void setPossibleResults(Collection newPossibleResults) {
        setPropertyValues(getPossibleResultsProperty(), newPossibleResults);
    }
}
