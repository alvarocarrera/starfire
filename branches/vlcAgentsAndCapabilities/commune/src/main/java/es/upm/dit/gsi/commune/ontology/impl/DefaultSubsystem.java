package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.commune.ontology.*;
import es.upm.dit.gsi.commune.ontology.System;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Subsystem
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultSubsystem extends DefaultSystem
         implements Subsystem {

    public DefaultSubsystem(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultSubsystem() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#isPartOf

    public Collection getIsPartOf() {
        return getPropertyValuesAs(getIsPartOfProperty(), System.class);
    }


    public RDFProperty getIsPartOfProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#isPartOf";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsPartOf() {
        return getPropertyValueCount(getIsPartOfProperty()) > 0;
    }


    public Iterator listIsPartOf() {
        return listPropertyValuesAs(getIsPartOfProperty(), System.class);
    }


    public void addIsPartOf(System newIsPartOf) {
        addPropertyValue(getIsPartOfProperty(), newIsPartOf);
    }


    public void removeIsPartOf(System oldIsPartOf) {
        removePropertyValue(getIsPartOfProperty(), oldIsPartOf);
    }


    public void setIsPartOf(Collection newIsPartOf) {
        setPropertyValues(getIsPartOfProperty(), newIsPartOf);
    }
}
