package es.upm.dit.gsi.commune.ontology;

import edu.stanford.smi.protegex.owl.model.*;

import java.util.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Diagnosis
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public interface Diagnosis extends OWLIndividual {

    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasHypothesis

    Collection getHasHypothesis();

    RDFProperty getHasHypothesisProperty();

    boolean hasHasHypothesis();

    Iterator listHasHypothesis();

    void addHasHypothesis(Hypothesis newHasHypothesis);

    void removeHasHypothesis(Hypothesis oldHasHypothesis);

    void setHasHypothesis(Collection newHasHypothesis);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#performedAction

    Collection getPerformedAction();

    RDFProperty getPerformedActionProperty();

    boolean hasPerformedAction();

    Iterator listPerformedAction();

    void addPerformedAction(PerformedAction newPerformedAction);

    void removePerformedAction(PerformedAction oldPerformedAction);

    void setPerformedAction(Collection newPerformedAction);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#performedHealingAction

    Collection getPerformedHealingAction();

    RDFProperty getPerformedHealingActionProperty();

    boolean hasPerformedHealingAction();

    Iterator listPerformedHealingAction();

    void addPerformedHealingAction(Object newPerformedHealingAction);

    void removePerformedHealingAction(Object oldPerformedHealingAction);

    void setPerformedHealingAction(Collection newPerformedHealingAction);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#performedMonitoringAction

    Collection getPerformedMonitoringAction();

    RDFProperty getPerformedMonitoringActionProperty();

    boolean hasPerformedMonitoringAction();

    Iterator listPerformedMonitoringAction();

    void addPerformedMonitoringAction(Object newPerformedMonitoringAction);

    void removePerformedMonitoringAction(Object oldPerformedMonitoringAction);

    void setPerformedMonitoringAction(Collection newPerformedMonitoringAction);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#performedTestAction

    Collection getPerformedTestAction();

    RDFProperty getPerformedTestActionProperty();

    boolean hasPerformedTestAction();

    Iterator listPerformedTestAction();

    void addPerformedTestAction(Object newPerformedTestAction);

    void removePerformedTestAction(Object oldPerformedTestAction);

    void setPerformedTestAction(Collection newPerformedTestAction);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#startedBySymptom

    Collection getStartedBySymptom();

    RDFProperty getStartedBySymptomProperty();

    boolean hasStartedBySymptom();

    Iterator listStartedBySymptom();

    void addStartedBySymptom(Symptom newStartedBySymptom);

    void removeStartedBySymptom(Symptom oldStartedBySymptom);

    void setStartedBySymptom(Collection newStartedBySymptom);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#status

    String getStatus();

    RDFProperty getStatusProperty();

    boolean hasStatus();

    void setStatus(String newStatus);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#whenHasFinished

    RDFSLiteral getWhenHasFinished();

    RDFProperty getWhenHasFinishedProperty();

    boolean hasWhenHasFinished();

    void setWhenHasFinished(RDFSLiteral newWhenHasFinished);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#whenHasStarted

    RDFSLiteral getWhenHasStarted();

    RDFProperty getWhenHasStartedProperty();

    boolean hasWhenHasStarted();

    void setWhenHasStarted(RDFSLiteral newWhenHasStarted);
}
