package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import es.upm.dit.gsi.commune.ontology.*;
import es.upm.dit.gsi.commune.ontology.System;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Agent
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultAgent extends DefaultActor
         implements Agent {

    public DefaultAgent(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultAgent() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#isExecutingIn

    public System getIsExecutingIn() {
        return (System) getPropertyValueAs(getIsExecutingInProperty(), System.class);
    }


    public RDFProperty getIsExecutingInProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#isExecutingIn";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasIsExecutingIn() {
        return getPropertyValueCount(getIsExecutingInProperty()) > 0;
    }


    public void setIsExecutingIn(System newIsExecutingIn) {
        setPropertyValue(getIsExecutingInProperty(), newIsExecutingIn);
    }
}
