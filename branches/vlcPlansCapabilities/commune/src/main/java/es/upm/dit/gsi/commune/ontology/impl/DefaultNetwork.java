package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.commune.ontology.Network;
import es.upm.dit.gsi.commune.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#Network
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultNetwork extends AbstractCodeGeneratorIndividual
         implements Network {

    public DefaultNetwork(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultNetwork() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasConnection

    public Collection getHasConnection() {
        return getPropertyValuesAs(getHasConnectionProperty(), Connection.class);
    }


    public RDFProperty getHasConnectionProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasConnection";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasConnection() {
        return getPropertyValueCount(getHasConnectionProperty()) > 0;
    }


    public Iterator listHasConnection() {
        return listPropertyValuesAs(getHasConnectionProperty(), Connection.class);
    }


    public void addHasConnection(Connection newHasConnection) {
        addPropertyValue(getHasConnectionProperty(), newHasConnection);
    }


    public void removeHasConnection(Connection oldHasConnection) {
        removePropertyValue(getHasConnectionProperty(), oldHasConnection);
    }


    public void setHasConnection(Collection newHasConnection) {
        setPropertyValues(getHasConnectionProperty(), newHasConnection);
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#hasDevice

    public Collection getHasDevice() {
        return getPropertyValuesAs(getHasDeviceProperty(), Device.class);
    }


    public RDFProperty getHasDeviceProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#hasDevice";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasHasDevice() {
        return getPropertyValueCount(getHasDeviceProperty()) > 0;
    }


    public Iterator listHasDevice() {
        return listPropertyValuesAs(getHasDeviceProperty(), Device.class);
    }


    public void addHasDevice(Device newHasDevice) {
        addPropertyValue(getHasDeviceProperty(), newHasDevice);
    }


    public void removeHasDevice(Device oldHasDevice) {
        removePropertyValue(getHasDeviceProperty(), oldHasDevice);
    }


    public void setHasDevice(Collection newHasDevice) {
        setPropertyValues(getHasDeviceProperty(), newHasDevice);
    }
}
