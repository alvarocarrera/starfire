package es.upm.dit.gsi.commune.ontology;

import edu.stanford.smi.protegex.owl.model.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/P2PDiagnosis.owl#Session
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public interface Session extends OWLIndividual {

    // Property http://www.owl-ontologies.com/P2PDiagnosis.owl#hasClient

    SoftwareSystem getHasClient();

    RDFProperty getHasClientProperty();

    boolean hasHasClient();

    void setHasClient(SoftwareSystem newHasClient);


    // Property http://www.owl-ontologies.com/P2PDiagnosis.owl#hasServer

    SoftwareSystem getHasServer();

    RDFProperty getHasServerProperty();

    boolean hasHasServer();

    void setHasServer(SoftwareSystem newHasServer);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#status

    String getStatus();

    RDFProperty getStatusProperty();

    boolean hasStatus();

    void setStatus(String newStatus);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#whenHasFinished

    RDFSLiteral getWhenHasFinished();

    RDFProperty getWhenHasFinishedProperty();

    boolean hasWhenHasFinished();

    void setWhenHasFinished(RDFSLiteral newWhenHasFinished);


    // Property http://www.owl-ontologies.com/Diagnosis.owl#whenHasStarted

    RDFSLiteral getWhenHasStarted();

    RDFProperty getWhenHasStartedProperty();

    boolean hasWhenHasStarted();

    void setWhenHasStarted(RDFSLiteral newWhenHasStarted);
}
