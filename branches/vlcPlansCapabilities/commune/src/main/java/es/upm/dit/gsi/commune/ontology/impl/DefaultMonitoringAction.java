package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import java.util.*;

import es.upm.dit.gsi.commune.ontology.MonitoringAction;
import es.upm.dit.gsi.commune.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/Diagnosis.owl#MonitoringAction
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultMonitoringAction extends DefaultEnvironmentAction
         implements MonitoringAction {

    public DefaultMonitoringAction(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultMonitoringAction() {
    }



    // Property http://www.owl-ontologies.com/Diagnosis.owl#resultSymptom

    public Collection getResultSymptom() {
        return getPropertyValuesAs(getResultSymptomProperty(), Symptom.class);
    }


    public RDFProperty getResultSymptomProperty() {
        final String uri = "http://www.owl-ontologies.com/Diagnosis.owl#resultSymptom";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasResultSymptom() {
        return getPropertyValueCount(getResultSymptomProperty()) > 0;
    }


    public Iterator listResultSymptom() {
        return listPropertyValuesAs(getResultSymptomProperty(), Symptom.class);
    }


    public void addResultSymptom(Symptom newResultSymptom) {
        addPropertyValue(getResultSymptomProperty(), newResultSymptom);
    }


    public void removeResultSymptom(Symptom oldResultSymptom) {
        removePropertyValue(getResultSymptomProperty(), oldResultSymptom);
    }


    public void setResultSymptom(Collection newResultSymptom) {
        setPropertyValues(getResultSymptomProperty(), newResultSymptom);
    }
}
