package es.upm.dit.gsi.commune.ontology.impl;

import edu.stanford.smi.protege.model.FrameID;
import edu.stanford.smi.protegex.owl.model.*;
import edu.stanford.smi.protegex.owl.model.impl.*;
import edu.stanford.smi.protegex.owl.javacode.AbstractCodeGeneratorIndividual;
import es.upm.dit.gsi.commune.ontology.RequiredDataCondition;
import es.upm.dit.gsi.commune.ontology.*;

/**
 * Generated by Protege-OWL  (http://protege.stanford.edu/plugins/owl).
 * Source OWL Class: http://www.owl-ontologies.com/P2PDiagnosis.owl#RequiredDataCondition
 *
 * @version generated on Tue Apr 05 14:50:26 CEST 2011
 */
public class DefaultRequiredDataCondition extends DefaultCondition
         implements RequiredDataCondition {

    public DefaultRequiredDataCondition(OWLModel owlModel, FrameID id) {
        super(owlModel, id);
    }


    public DefaultRequiredDataCondition() {
    }



    // Property http://www.owl-ontologies.com/P2PDiagnosis.owl#requiredDataType

    public String getRequiredDataType() {
        return (String) getPropertyValue(getRequiredDataTypeProperty());
    }


    public RDFProperty getRequiredDataTypeProperty() {
        final String uri = "http://www.owl-ontologies.com/P2PDiagnosis.owl#requiredDataType";
        final String name = getOWLModel().getResourceNameForURI(uri);
        return getOWLModel().getRDFProperty(name);
    }


    public boolean hasRequiredDataType() {
        return getPropertyValueCount(getRequiredDataTypeProperty()) > 0;
    }


    public void setRequiredDataType(String newRequiredDataType) {
        setPropertyValue(getRequiredDataTypeProperty(), newRequiredDataType);
    }
}
